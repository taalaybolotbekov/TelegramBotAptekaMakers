import telebot
import config
import mysql.connector
from telebot import types
bot = telebot.TeleBot(config.TOKEN)

db = config.DB
cursor = db.cursor()

apteka_dict = {}

class Apteka:
    def __init__(self, name):
        self.name = name
        self.adress = None
        self.region = None
        self.selection = None
        self.sear_name = None
        self.constant = None
@bot.message_handler(commands=['start'])
def welcome(message):
    msg = bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAI3eV56Cj5ob-7NfqeTZ4HBdwvTZXhbAAJlAgADOKAKtGgxreR2qoYYBA')
    
        
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üë©üèª‚Äç‚öïÔ∏è –ü—Ä–æ–¥–∞–≤–µ—Ü-—Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç', 'üß¥ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å')
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n–Ø - <b>{1.first_name}</b>, –±–æ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã –ø–æ–º–æ—á—å, –í–∞–º!".format(message.from_user, bot.get_me()),
    parse_mode='html', reply_markup=markup)

    
@bot.message_handler(content_types=['text'])
def buyer(message):
    if message.text == 'üß¥ –ü–æ–∫—É–ø–∞—Ç–µ–ª—å' or message.text== 'üö™ –ù–∞–∑–∞–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.row('üë©üèª‚Äç‚öïÔ∏è –ê–ø—Ç–µ–∫–∏ –≤ –†–∞–π–æ–Ω–∞—Ö –ë–∏—à–∫–µ–∫–∞', 'üß¥ –ü–æ–∏—Å–∫ –ú–∞—Å–∫–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–¥—Ä–µ—Å—É','üö™ –í—ã–π—Ç–∏')
        send = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:", reply_markup=markup)
        bot.register_next_step_handler(send, discripe)
    if message.text == 'üë©üèª‚Äç‚öïÔ∏è –ü—Ä–æ–¥–∞–≤–µ—Ü-—Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç':
        msg = bot.reply_to(message, "–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∞–ø—Ç–µ–∫–∏?",reply_markup = types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg, process_name_step)

def process_name_step(message):
    try:
        chat_id = message.chat.id
        name = message.text
        apteka = Apteka(name)
        apteka_dict[chat_id] = apteka
        msg = bot.reply_to(message, "–ê–¥—Ä–µ—Å –≤–∞—à–µ–π –ê–ø—Ç–µ–∫–∏?")
        bot.register_next_step_handler(msg, process_adress_step)
    except Exception as e:
        bot.reply_to(message, 'oooops')
def process_adress_step(message):
    try:
        chat_id = message.chat.id
        adress = message.text
        apteka = apteka_dict[chat_id]
        apteka.adress = adress
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True,resize_keyboard=True)
        markup.add('–õ–µ–Ω–∏–Ω—Å–∫–∏–π', '–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∏–π','–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π', '–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π')
        msg = bot.reply_to(message, '–†–∞–π–æ–Ω –≤–∞—à–µ–π –∞–ø—Ç–µ–∫–∏?', reply_markup=markup)
        bot.register_next_step_handler(msg, process_desss_step)
    except Exception as e:
        bot.reply_to(message, 'oooops')
def process_desss_step(message):
    try:
        chat_id = message.chat.id
        region = message.text
        apteka = apteka_dict[chat_id]
        apteka.region = region
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True,resize_keyboard=True)
        markup.add('–î–∞', '–ù–µ—Ç',)
        msg = bot.send_message(chat_id, '–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∞–ø—Ç–µ–∫–∏: ' + apteka.name + '\n –ê–¥—Ä–µ—Å –≤–∞—à–µ–π –∞–ø—Ç–µ–∫–∏: ' + 
        apteka.adress + '\n –í–∞—à —Ä–∞–π–æ–Ω: ' + apteka.region + '\n–ê–ø—Ç–µ–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!', reply_markup=markup)
        bot.send_message(chat_id,'–£ –≤–∞—Å –∏–º–µ—é—Ç—Å—è –º–∞—Å–∫–∏?')
        bot.register_next_step_handler(msg, mask)

    except Exception as e:
        bot.reply_to(message, 'oooops')


def mask(message):
    
    if message.text == '–ù–µ—Ç':
        Apteka.constant = False
        bot.send_message(message.chat.id,'–°–ø–∞—Å–∏–±–æ! –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')
        register(message)

    elif message.text == '–î–∞':
        Apteka.constant = True
        msg = bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:')
        bot.register_next_step_handler(msg,register)


def register(message):
    try:
        if Apteka.constant:
            chat_id = message.chat.id
            selection = message.text
        elif Apteka.constant == False:
            chat_id = message.chat.id
            selection = 0
        apteka = apteka_dict[chat_id]
        apteka.selection = selection
        sql = "INSERT INTO pharmacy (user_id, name, adress, region, mask) VALUES (%s, %s, %s, %s, %s)"
        val = (message.chat.id, apteka.name, apteka.adress, apteka.region, selection)
        cursor.execute(sql, val)
        db.commit()
        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True,resize_keyboard=True)
        markup.add('/start')
        msg = bot.send_message(chat_id, '–ú–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –Ω–∞—á–Ω–µ—Ç—Å—è —á—É–¥–æüòÑ', reply_markup=markup)
        bot.register_next_step_handler(msg, welcome)
    except:
        bot.reply_to(message, 'oooops')



def discripe(message):
    if message.text == 'üë©üèª‚Äç‚öïÔ∏è –ê–ø—Ç–µ–∫–∏ –≤ –†–∞–π–æ–Ω–∞—Ö –ë–∏—à–∫–µ–∫–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.row('–õ–µ–Ω–∏–Ω—Å–∫–∏–π', '–°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–∏–π','–ü–µ—Ä–≤–æ–º–∞–π—Å–∫–∏–π', '–û–∫—Ç—è–±—Ä—å—Å–∫–∏–π','üö™ –ù–∞–∑–∞–¥')
        send = bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:", reply_markup=markup)
        bot.register_next_step_handler(send, des)
    elif message.text == 'üß¥ –ü–æ–∏—Å–∫ –ú–∞—Å–∫–∏ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏ –∞–¥—Ä–µ—Å—É':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –∞–ø—Ç–µ–∫–∏:',reply_markup = types.ReplyKeyboardRemove())
        bot.register_next_step_handler(msg,search_names)
    elif message.text == 'üö™ –í—ã–π—Ç–∏':
        exit_(message)
        
def search_names(message):
    sql = "SELECT * FROM pharmacy WHERE name LIKE %s"
    val = ('%'+ message.text +'%', )
    cursor.execute(sql,val)
    sear_name = cursor.fetchall()
    Apteka.sear_name = sear_name
    msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∞–¥—Ä–µ—Å –∞–ø—Ç–µ–∫–∏:')
    bot.register_next_step_handler(msg,search_adress)

def search_adress(message):
    try:
        x = 0
        sql = "SELECT * FROM pharmacy WHERE adress LIKE %s"
        val = ('%'+ message.text +'%', )
        cursor.execute(sql,val)
        search = cursor.fetchall()
        for result in search:
            if result in Apteka.sear_name:
                bot.send_message(message.chat.id,"–ù–∞–∑–≤–∞–Ω–∏–µ: " + result[0] +
                "\n–ê–¥—Ä–µ—Å: " + result[2] + "\n–ù–∞–ª–∏—á–∏–µ –º–∞—Å–æ–∫: " + str(result[4]))
                x+=1
        if x == 0:
            bot.send_message(message.chat.id, "–ê–ø—Ç–µ–∫–∞ —Å —Ç–∞–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞!")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.row('üö™ –ù–∞–∑–∞–¥')
        send = bot.send_message(message.chat.id, "–ñ–µ–ª–∞–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥?", reply_markup=markup)
        bot.register_next_step_handler(send, buyer)
    except:
        bot.reply_to(message, 'oooops')

def des(message):
    if message.text == "üö™ –ù–∞–∑–∞–¥":
        buyer(message)
    else:
        try:
            sql = "SELECT * FROM pharmacy WHERE region LIKE %s"
            val = (message.text,)
            cursor.execute(sql,val)
            regions = cursor.fetchall()
            for region_ in regions:
                bot.send_message(message.chat.id,"–ù–∞–∑–≤–∞–Ω–∏–µ: " + region_[0] +
                "\n–ê–¥—Ä–µ—Å: " + region_[2] + "\n–ù–∞–ª–∏—á–∏–µ –º–∞—Å–æ–∫: " + str(region_[4]))
        except:
            bot.reply_to(message, 'oooops')

def exit_(message):
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    markup.add('/start')  
    msg = bot.send_message(message.chat.id, '–ú–æ–∂–µ—Ç–µ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –Ω–∞—á–Ω–µ—Ç—Å—è —á—É–¥–æüòÑ', reply_markup=markup)
    bot.register_next_step_handler(msg, welcome)



# RUN
# bot.enable_save_next_step_handlers(delay=2)
# bot.load_next_step_handlers()

bot.polling(none_stop=True)